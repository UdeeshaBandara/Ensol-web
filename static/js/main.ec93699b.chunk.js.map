{"version":3,"sources":["reportWebVitals.js","App.js","images/company_logo.png","components/login.jsx","components/dashboard.jsx","components/orders.jsx","components/repairs.jsx","components/repairs_dashboard.jsx","components/AddMachineData.jsx","components/EditMachineData.jsx","components/machine_dashboard.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","App","Login","state","email","password","token","changeHandler","e","setState","target","name","value","submitHandler","a","preventDefault","user","navigator","onLine","length","notify","axios","post","data","console","log","status","sessionStorage","setItem","accessToken","window","location","href","message","response","msg","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","this","className","to","alt","src","logo","type","onChange","onClick","Component","Dashboard","orders","startDate","Date","endDate","filteredOrders","repair_count","total_machines","rented_machines","user_count","filterText","filterResetText","handleRowClick","id","setStartDate","sdate","setEndDate","edate","handleDateChange","date","filterHandler","orderFilter","headers","getItem","filteredList","map","order","orderStatus","color","username","address","telephone","price","filterReset","logOut","clear","class","style","width","height","data-bs-toggle","Nav","NavDropdown","title","Item","data-toggle","aria-expanded","aria-controls","xmlns","fill","viewBox","fill-rule","d","textAlign","utils","DateFnsUtils","disableToolbar","variant","format","margin","label","KeyboardButtonProps","marginTop","marginLeft","Button","backgroundColor","borderColor","get","allOrders","allRepairs","repairs","repair","description","filteredRepairs","top_values","addEventListener","event","persisted","performance","navigation","reload","Orders","machines","oid","total","odate","tele","newstatus","onChangeHandler","index","selectedIndex","option","childNodes","getAttribute","put","for","placeholder","machine","image","mname","qty","queryParams","URLSearchParams","search","allMachines","machineType","rentPrice","OrderMachines","quantity","contractEndDate","substring","contractStartDate","JSON","parse","images","ostatus","orderDate","Repairs","rid","mtype","mimage","Repair","filterOn2","repairFilter","AddMachineData","useState","serialnumber","setserialNumber","machinename","setmachineName","setDescription","rentprice","setrentPrice","availablequantity","setavailableQuantity","setImage","serialNumber","availableQty","machinePhotos","Insert","Authorization","successNotify","success","Form","Group","Label","Control","required","controlId","as","rows","min","multiple","img","files","EditMachineData","MySwal","withReactContent","Swal","imagePath","setImagePath","deleteid","setDeleteid","useEffect","htmlFor","URL","createObjectURL","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","reverseButtons","result","isConfirmed","datas","delete","MachineDashboard","filteredMachines","filterOn","addText","setStartDate2","startDate2","machineAddHandler","marginBottom","availableQuantity","ReactDOM","render","Fragment","exact","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.ec93699b.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","export default __webpack_public_path__ + \"static/media/company_logo.8d8fd1e7.png\";","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"../css/Login.css\";\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport logo from \"../images/company_logo.png\";\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    token: \"\"\r\n  };\r\n\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  notify(msg)\r\n  {\r\n    toast.error(msg, {\r\n      position: \"top-right\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      });\r\n  }\r\n\r\n  submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    let user = {\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    };\r\n    if (navigator.onLine) \r\n    {\r\n      try {\r\n\r\n        if(!user.email || user.email.length === 0)\r\n        {\r\n          this.notify(\"Invalid email address\");\r\n        }\r\n        else if(!user.password || user.email.password === 0)\r\n        {\r\n          this.notify(\"Invalid password\");\r\n        }\r\n        else\r\n        {\r\n          if (user) \r\n          {\r\n            const { data } = await axios.post(\r\n              \"https://ensolapi.herokuapp.com/admin/auth\",\r\n              user\r\n            );\r\n\r\n            console.log(data);\r\n            \r\n            if (data.status) \r\n            {\r\n              sessionStorage.setItem(\"token\", data.accessToken);\r\n              sessionStorage.setItem(\"email\", this.state.email);\r\n              window.location.href = \"/dashboard\";\r\n            } \r\n            else \r\n            {\r\n              this.notify(data.data);\r\n            }\r\n          } \r\n          else \r\n          {\r\n            this.notify(\"Failed to get values of the fields\");\r\n          }\r\n        }\r\n      } \r\n      catch (error) \r\n      {\r\n        this.notify(error.message + \" : \" + error.response.data);\r\n      }\r\n    } else \r\n    {\r\n      this.notify(\"Please check your internet connection\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { email, password } = this.state;\r\n    return (\r\n        <div className='login'>\r\n        <Link to='/'>\r\n            <img\r\n                alt=\"logo image\"\r\n                className=\"login_logo\"\r\n                src={logo} \r\n            />\r\n        </Link>\r\n\r\n        <div>\r\n          <ToastContainer />\r\n        </div>\r\n\r\n        <div className='login_container'>\r\n            <h1>Sign-in</h1>\r\n\r\n            <form>\r\n                <h5>E-mail</h5>\r\n                <input type='text' name=\"email\" value={email} onChange={this.changeHandler} className=\"login_text\"/>\r\n\r\n                <h5>Password</h5>\r\n                <input type='password' name=\"password\" value={password} onChange={this.changeHandler} className=\"login_text\"/>\r\n\r\n                <button type='submit' className='login_signInButton' onClick={this.submitHandler}>Sign In</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, {Component} from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport {Button, Nav, NavDropdown} from 'react-bootstrap';\r\nimport \"../vendors/ti-icons/css/themify-icons.css\";\r\nimport \"../vendors/base/vendor.bundle.base.css\";\r\nimport \"../css/style.css\";\r\nimport logo from \"../images/company_logo.png\";\r\n\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Dashboard extends Component {\r\n    state = {\r\n        orders: [],\r\n        startDate: new Date(),\r\n        endDate: new Date(),\r\n        filteredOrders: [],\r\n        repair_count: 0,\r\n        total_machines: 0,\r\n        rented_machines: 0,\r\n        user_count: 0,\r\n        filterText: \"Filter\",\r\n        filterResetText: \"Reset\"\r\n\r\n    };\r\n\r\n    handleRowClick = (id) => {\r\n        window.location.href = \"/orders/search?id=\" + id;\r\n    }\r\n\r\n\r\n\r\n    setStartDate = (sdate) => {\r\n        this.setState({startDate: sdate})\r\n    }\r\n\r\n    setEndDate = (edate) => {\r\n        this.setState({endDate: edate})\r\n    }\r\n\r\n\r\n    handleDateChange = (date) => {\r\n        this.state.startDate = date;\r\n    }\r\n\r\n    filterHandler = async (e) => {\r\n        e.preventDefault();\r\n\r\n        let orderFilter = {\r\n            endDate: this.state.endDate,\r\n            startDate: this.state.startDate\r\n        };\r\n        let {data} = await axios.post(\"https://ensolapi.herokuapp.com/admin/order/filter\", orderFilter, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + sessionStorage.getItem(\"token\")\r\n            },\r\n        });\r\n\r\n        let filteredList = data.data.orders.map((order) => {\r\n            if (order.orderStatus == 0) {\r\n                order.orderStatus = \"Cancelled\";\r\n                order.color = \"#F44336\";\r\n            } else if (order.orderStatus == 1) {\r\n                order.orderStatus = \"Completed\";\r\n                order.color = \"#4CAF50\";\r\n            } else if (order.orderStatus == 2) {\r\n                order.orderStatus = \"Accepted\";\r\n                order.color = \"#3F51B5\";\r\n            } else if (order.orderStatus == 3) {\r\n                order.orderStatus = \"Pending\";\r\n                order.color = \"#FF5722\";\r\n            }\r\n            return {\r\n                id: order.id,\r\n                username: order.user.name,\r\n                address: order.user.address,\r\n                telephone: order.user.telephone,\r\n                price: order.price,\r\n                status: order.orderStatus,\r\n                color: order.color\r\n            };\r\n        });\r\n\r\n        this.setState({filteredOrders: filteredList})\r\n\r\n    }\r\n    filterReset = async (e) => {\r\n        e.preventDefault();\r\n\r\n\r\n        this.setState({filteredOrders: this.state.orders})\r\n\r\n    }\r\n    logOut = () => {\r\n\r\n        sessionStorage.clear();\r\n        window.location.href = \"/\";\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div class=\"container-scroller\">\r\n\r\n                <nav class=\"navbar col-lg-12 col-12 p-0 fixed-top d-flex flex-row\">\r\n\r\n                    <div class=\"text-center navbar-brand-wrapper d-flex align-items-center justify-content-center\">\r\n                        <img style={{width: 70, height: 70}} src={logo}/>\r\n                    </div>\r\n                    <div class=\"navbar-menu-wrapper d-flex align-items-center justify-content-end\">\r\n\r\n\r\n                        <ul class=\"navbar-nav navbar-nav-right\">\r\n                            <li class=\"nav-item nav-profile dropdown\">\r\n                                <a class=\"nav-link dropdown-toggle\" data-bs-toggle=\"dropdown\" id=\"profileDropdown\">\r\n                                    <Nav>\r\n                                        <NavDropdown title={sessionStorage.getItem(\"email\")}>\r\n\r\n\r\n                                            <NavDropdown.Item onClick={this.logOut}>Logout</NavDropdown.Item>\r\n\r\n\r\n                                        </NavDropdown>\r\n                                    </Nav>\r\n\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                        <button class=\"navbar-toggler navbar-toggler-right d-lg-none align-self-center\" type=\"button\"\r\n                                data-toggle=\"offcanvas\">\r\n                            <span class=\"ti-view-list\"/>\r\n                        </button>\r\n                    </div>\r\n                </nav>\r\n                <div class=\"container-fluid page-body-wrapper\">\r\n                    <nav class=\"sidebar sidebar-offcanvas\" id=\"sidebar\">\r\n                        <ul class=\"nav\">\r\n                            <li class=\"nav-item\">\r\n                                <a class=\"nav-link\" href=\"/dashboard\">\r\n                                    <i class=\"ti-shield menu-icon\"/>\r\n                                    <span class=\"menu-title\">Dashboard</span>\r\n                                </a>\r\n                            </li>\r\n                            <li class=\"nav-item\">\r\n                                <a class=\"nav-link\" data-bs-toggle=\"collapse\" href=\"/machine\" aria-expanded=\"false\"\r\n                                   aria-controls=\"ui-basic\">\r\n                                    <i class=\"ti-plug menu-icon\"/>\r\n                                    <span class=\"menu-title\">Machines</span>\r\n\r\n                                </a>\r\n\r\n                            </li>\r\n                            <li class=\"nav-item\">\r\n                                <Link class=\"nav-link\" to=\"/repairs\">\r\n                                    <i className=\"ti-settings menu-icon\"/>\r\n                                    <span class=\"menu-title\">Repairs</span>\r\n                                </Link>\r\n\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n                    <div class=\"main-panel\">\r\n                        <div class=\"content-wrapper\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-12 grid-margin\">\r\n                                    <div class=\"d-flex justify-content-between align-items-center\">\r\n                                        <div>\r\n                                            <h4 class=\"font-weight-bold mb-0\">Dashboard</h4>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"row\">\r\n\r\n                                <div class=\"col-md-3 grid-margin stretch-card\">\r\n                                    <div class=\"card\">\r\n                                        <div class=\"card-body\">\r\n                                            <p class=\"card-title text-md-center text-xl-left\">Total Machines</p>\r\n                                            <div\r\n                                                class=\"d-flex flex-wrap justify-content-between justify-content-md-center justify-content-xl-between align-items-center\">\r\n                                                <h3 class=\"mb-0 mb-md-2 mb-xl-0 order-md-1 order-xl-0\">{this.state.total_machines}</h3>\r\n\r\n\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\"\r\n                                                     fill=\"currentColor\" class=\"bi bi-bag-check-fill\"\r\n                                                     viewBox=\"0 0 16 16\">\r\n                                                    <path fill-rule=\"evenodd\"\r\n                                                          d=\"M10.5 3.5a2.5 2.5 0 0 0-5 0V4h5v-.5zm1 0V4H15v10a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V4h3.5v-.5a3.5 3.5 0 1 1 7 0zm-.646 5.354a.5.5 0 0 0-.708-.708L7.5 10.793 6.354 9.646a.5.5 0 1 0-.708.708l1.5 1.5a.5.5 0 0 0 .708 0l3-3z\"/>\r\n                                                </svg>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-3 grid-margin stretch-card\">\r\n                                    <div class=\"card\">\r\n                                        <div class=\"card-body\">\r\n                                            <p class=\"card-title text-md-center text-xl-left\">Rented Machines</p>\r\n                                            <div\r\n                                                class=\"d-flex flex-wrap justify-content-between justify-content-md-center justify-content-xl-between align-items-center\">\r\n                                                <h3 class=\"mb-0 mb-md-2 mb-xl-0 order-md-1 order-xl-0\">{this.state.rented_machines}</h3>\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\"\r\n                                                     fill=\"currentColor\" class=\"bi bi-bag-dash-fill\"\r\n                                                     viewBox=\"0 0 16 16\">\r\n                                                    <path fill-rule=\"evenodd\"\r\n                                                          d=\"M10.5 3.5a2.5 2.5 0 0 0-5 0V4h5v-.5zm1 0V4H15v10a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V4h3.5v-.5a3.5 3.5 0 1 1 7 0zM6 9.5a.5.5 0 0 0 0 1h4a.5.5 0 0 0 0-1H6z\"/>\r\n                                                </svg>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-3 grid-margin stretch-card\">\r\n                                    <div class=\"card\">\r\n                                        <div class=\"card-body\">\r\n                                            <p class=\"card-title text-md-center text-xl-left\">Repairs Count</p>\r\n                                            <div\r\n                                                class=\"d-flex flex-wrap justify-content-between justify-content-md-center justify-content-xl-between align-items-center\">\r\n                                                <h3 class=\"mb-0 mb-md-2 mb-xl-0 order-md-1 order-xl-0\">{this.state.repair_count}</h3>\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\"\r\n                                                     fill=\"currentColor\" class=\"bi bi-bag-x-fill\" viewBox=\"0 0 16 16\">\r\n                                                    <path fill-rule=\"evenodd\"\r\n                                                          d=\"M10.5 3.5a2.5 2.5 0 0 0-5 0V4h5v-.5zm1 0V4H15v10a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V4h3.5v-.5a3.5 3.5 0 1 1 7 0zM6.854 8.146a.5.5 0 1 0-.708.708L7.293 10l-1.147 1.146a.5.5 0 0 0 .708.708L8 10.707l1.146 1.147a.5.5 0 0 0 .708-.708L8.707 10l1.147-1.146a.5.5 0 0 0-.708-.708L8 9.293 6.854 8.146z\"/>\r\n                                                </svg>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-3 grid-margin stretch-card\">\r\n                                    <div class=\"card\">\r\n                                        <div class=\"card-body\">\r\n                                            <p class=\"card-title text-md-center text-xl-left\">User Count</p>\r\n                                            <div\r\n                                                class=\"d-flex flex-wrap justify-content-between justify-content-md-center justify-content-xl-between align-items-center\">\r\n                                                <h3 class=\"mb-0 mb-md-2 mb-xl-0 order-md-1 order-xl-0\">{this.state.user_count}</h3>\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\"\r\n                                                     fill=\"currentColor\" class=\"bi bi-people-fill\" viewBox=\"0 0 16 16\">\r\n                                                    <path\r\n                                                        d=\"M7 14s-1 0-1-1 1-4 5-4 5 3 5 4-1 1-1 1H7zm4-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\"/>\r\n                                                    <path fill-rule=\"evenodd\"\r\n                                                          d=\"M5.216 14A2.238 2.238 0 0 1 5 13c0-1.355.68-2.75 1.936-3.72A6.325 6.325 0 0 0 5 9c-4 0-5 3-5 4s1 1 1 1h4.216z\"/>\r\n                                                    <path d=\"M4.5 8a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5z\"/>\r\n                                                </svg>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div style={{textAlign: 'right'}}>\r\n                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                    <KeyboardDatePicker\r\n                                        disableToolbar\r\n                                        variant=\"inline\"\r\n                                        format=\"MM/dd/yyyy\"\r\n                                        margin=\"normal\"\r\n                                        id=\"date-picker-inline\"\r\n                                        label=\"Start Date\"\r\n                                        value={this.state.startDate}\r\n                                        onChange={date => this.setStartDate(date)}\r\n                                        KeyboardButtonProps={{\r\n                                            'aria-label': 'change date',\r\n                                        }}\r\n                                    />\r\n                                </MuiPickersUtilsProvider>\r\n\r\n                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                    <KeyboardDatePicker\r\n                                        disableToolbar\r\n                                        variant=\"inline\"\r\n                                        format=\"MM/dd/yyyy\"\r\n                                        margin=\"normal\"\r\n                                        id=\"date-picker-inline2\"\r\n                                        label=\"End Date\"\r\n                                        value={this.state.endDate}\r\n                                        onChange={date => this.setEndDate(date)}\r\n                                        KeyboardButtonProps={{\r\n                                            'aria-label': 'change date',\r\n                                        }}\r\n                                    />\r\n                                </MuiPickersUtilsProvider>\r\n\r\n                                <button style={{marginTop: 15, marginLeft: 15, color: 'white'}} type=\"submit\"\r\n                                        class=\"btn btn-warning me-2\"\r\n                                        onClick={this.filterHandler}>{this.state.filterText}</button>\r\n\r\n                                <button style={{marginTop: 15, color: 'white'}} type=\"submit\"\r\n                                        class=\"btn btn-danger\"\r\n                                        onClick={this.filterReset}>{this.state.filterResetText}</button>\r\n\r\n                            </div>\r\n\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-12 grid-margin stretch-card\">\r\n                                    <div class=\"card position-relative\">\r\n                                        <div class=\"card-body\">\r\n                                            <p class=\"card-title mb-0\">Orders</p>\r\n                                            <div class=\"table-responsive\">\r\n                                                <table class=\"table table-hover\">\r\n                                                    <thead>\r\n                                                    <tr>\r\n                                                        <th>Order Id</th>\r\n                                                        <th>Customer</th>\r\n                                                        <th>Customer address</th>\r\n                                                        <th>Telephone</th>\r\n                                                        <th>Price</th>\r\n                                                        <th>Order status</th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n\r\n                                                    {this.state.filteredOrders ? this.state.filteredOrders.map((order) => (\r\n                                                        <tr key={order.id}\r\n                                                            onClick={() => this.handleRowClick(order.id)}>\r\n                                                            <td>{order.id}</td>\r\n                                                            <td>{order.username}</td>\r\n                                                            <td>{order.address}</td>\r\n                                                            <td>{order.telephone}</td>\r\n                                                            <td>{order.price}</td>\r\n                                                            <td><Button style={{\r\n                                                                backgroundColor: order.color,\r\n                                                                borderColor: order.color,\r\n                                                                color: 'white',\r\n                                                                width: '125px'\r\n                                                            }}>{order.status}</Button></td>\r\n                                                        </tr>\r\n                                                    )) : null}\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <footer class=\"footer\">\r\n                            <div class=\"d-sm-flex justify-content-center justify-content-sm-between\">\r\n                                <span class=\"text-muted text-center text-sm-left d-block d-sm-inline-block\">Copyright © RWP 2022</span>\r\n                            </div>\r\n                        </footer>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        let {data} = await axios.get(\"https://ensolapi.herokuapp.com/admin/dashboardValues\", {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + sessionStorage.getItem(\"token\")\r\n            },\r\n        });\r\n\r\n        let allOrders = data.data.orders.map((order) => {\r\n            if (order.orderStatus == 0) {\r\n                order.orderStatus = \"Cancelled\";\r\n                order.color = \"#F44336\";\r\n            } else if (order.orderStatus == 1) {\r\n                order.orderStatus = \"Completed\";\r\n                order.color = \"#4CAF50\";\r\n            } else if (order.orderStatus == 2) {\r\n                order.orderStatus = \"Accepted\";\r\n                order.color = \"#3F51B5\";\r\n            } else if (order.orderStatus == 3) {\r\n                order.orderStatus = \"Pending\";\r\n                order.color = \"#FF5722\";\r\n            }\r\n            return {\r\n                id: order.id,\r\n                username: order.user.name,\r\n                address: order.user.address,\r\n                telephone: order.user.telephone,\r\n                price: order.price,\r\n                status: order.orderStatus,\r\n                color: order.color\r\n            };\r\n        });\r\n\r\n        let allRepairs = data.data.repairs.map((repair) => {\r\n            if (repair.status == 0) {\r\n                repair.status = \"Cancelled\";\r\n                repair.color = \"#F44336\";\r\n            } else if (repair.status == 1) {\r\n                repair.status = \"Completed\";\r\n                repair.color = \"#4CAF50\";\r\n            } else if (repair.status == 2) {\r\n                repair.status = \"Accepted\";\r\n                repair.color = \"#3F51B5\";\r\n            } else if (repair.status == 3) {\r\n                repair.status = \"Pending\";\r\n                repair.color = \"#FF5722\";\r\n            }\r\n            return {\r\n                id: repair.id,\r\n                description: repair.description,\r\n                username: repair.order.user.name,\r\n                address: repair.order.user.address,\r\n                telephone: repair.order.user.telephone,\r\n                status: repair.status,\r\n                color: repair.color\r\n            };\r\n        });\r\n\r\n        this.setState({\r\n            orders: allOrders,\r\n            filteredOrders: allOrders,\r\n            repairs: allRepairs,\r\n            filteredRepairs: allRepairs,\r\n            repair_count: data.data.top_values.repair_count,\r\n            total_machines: data.data.top_values.total_machines,\r\n            rented_machines: data.data.top_values.rented_machines,\r\n            user_count: data.data.top_values.user_count\r\n        });\r\n    }\r\n}\r\n\r\nwindow.addEventListener(\"pageshow\", function (event) {\r\n    var historyTraversal = event.persisted || (typeof window.performance != \"undefined\" && window.performance.navigation.type === 2);\r\n    if (historyTraversal) {\r\n        window.location.reload();\r\n    }\r\n});\r\n\r\nexport default Dashboard;","import React, {Component} from \"react\";\r\nimport axios from \"axios\";\r\n//import \"../css/Login.css\";\r\nimport {ToastContainer, toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nclass Orders extends Component {\r\n    state = {\r\n        machines: [],\r\n        oid: \"\",\r\n        total: 0,\r\n        odate: \"\",\r\n        status: \"\",\r\n        username: \"\",\r\n        address: \"\",\r\n        tele: \"\",\r\n        newstatus: 0\r\n    };\r\n\r\n    notify(msg) {\r\n        toast.error(msg, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n        });\r\n    }\r\n\r\n    onChangeHandler = (e) => {\r\n        const index = e.target.selectedIndex;\r\n        const el = e.target.childNodes[index]\r\n        const option = el.getAttribute('id');\r\n        this.state.newstatus = option;\r\n        console.log(\"Selected option \" + option);\r\n    }\r\n\r\n    submitHandler = async (e) => {\r\n        e.preventDefault();\r\n        console.log('Order Status: ', this.state.newstatus);\r\n        let status = {\r\n            orderStatus: this.state.newstatus\r\n        };\r\n        if (navigator.onLine) {\r\n            try {\r\n\r\n                if (status === -1) {\r\n                    this.notify(\"Invalid order status\");\r\n                } else {\r\n                    if (status) {\r\n                        const {data} = await axios.put(\"https://ensolapi.herokuapp.com/order/\" + this.state.oid, status, {\r\n                            headers: {\r\n                                \"Authorization\": \"Bearer \" + sessionStorage.getItem(\"token\")\r\n                            },\r\n                        });\r\n\r\n                        console.log(data);\r\n\r\n                        if (data.status) {\r\n                            window.location.reload();\r\n                        } else {\r\n                            this.notify(data.data);\r\n                        }\r\n                    } else {\r\n                        this.notify(\"Failed to get the order status\");\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                this.notify(error.message + \" : \" + error.response.data);\r\n            }\r\n        } else {\r\n            this.notify(\"Please check your internet connection\");\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <div class=\"card\">\r\n                        <div class=\"card-body\">\r\n                            <h4 class=\"card-title\">Order Deails</h4>\r\n                            <p class=\"card-description\">\r\n                                Order Id : {this.state.oid}\r\n                            </p>\r\n                            <form class=\"forms-sample\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"exampleInputName1\">Order Total</label>\r\n                                    <input type=\"text\" class=\"form-control\" placeholder=\"Total\"\r\n                                           value={this.state.total}/>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"exampleInputEmail3\">Order Date</label>\r\n                                    <input type=\"text\" class=\"form-control\" placeholder=\"Order date\"\r\n                                           value={this.state.odate}/>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"exampleInputEmail3\">Order Status</label>\r\n                                    <input type=\"text\" class=\"form-control\" placeholder=\"Order status\"\r\n                                           value={this.state.status}/>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"exampleInputPassword4\">Customer</label>\r\n                                    <input type=\"text\" class=\"form-control\" id=\"exampleInputPassword4\"\r\n                                           placeholder=\"Username\" value={this.state.username}/>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"exampleInputPassword4\">Customer address</label>\r\n                                    <input type=\"text\" class=\"form-control\" id=\"exampleInputPassword4\"\r\n                                           placeholder=\"User address\" value={this.state.address}/>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"exampleInputPassword4\">Telephone number</label>\r\n                                    <input type=\"text\" class=\"form-control\" id=\"exampleInputPassword4\"\r\n                                           placeholder=\"Telephone number\" value={this.state.tele}/>\r\n                                </div>\r\n\r\n                                <div class=\"row\">\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div>\r\n                    <div class=\"card position-relative\">\r\n                        <div class=\"card-body\">\r\n                            <p class=\"card-title mb-0\">Machines</p>\r\n                            <div class=\"table-responsive\">\r\n                                <table class=\"table table-hover\">\r\n                                    <thead>\r\n                                    <tr>\r\n                                        <th>Image</th>\r\n                                        <th>Machine name</th>\r\n                                        <th>Price</th>\r\n                                        <th>Quantity</th>\r\n                                        <th>Contract Start Date</th>\r\n                                        <th>Contract End Date</th>\r\n\r\n                                    </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n\r\n                                    {this.state.machines ? this.state.machines.map((machine) => (\r\n                                        <tr>\r\n                                            {machine.image[0].length > 0 ?\r\n                                                <td><img style={{width: 100, height: 100}} alt=\"logo image\"\r\n                                                         src={machine.image[0]}/></td> : null}\r\n                                            <td>{machine.mname}</td>\r\n                                            <td>{machine.price}</td>\r\n                                            <td>{machine.qty}</td>\r\n                                            <td>{machine.sdate}</td>\r\n                                            <td>{machine.edate}</td>\r\n                                        </tr>\r\n                                    )) : null}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div>\r\n                    <div class=\"card position-relative\">\r\n                        <div class=\"card-body\">\r\n                            <div class=\"table-responsive\"></div>\r\n\r\n                            {this.state.status !== \"Cancelled\" ?\r\n                                <div>\r\n                                    <div class=\"form-group\">\r\n                                        <p class=\"card-title mb-0\">Update Order Status</p>\r\n                                        <select class=\"form-control\" id=\"statusDropDown\"\r\n                                                onChange={this.onChangeHandler}>\r\n                                            <option id=\"0\">Cancel</option>\r\n                                            <option id=\"1\">Complete</option>\r\n                                            <option id=\"2\">Accept</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <button type=\"submit\" class=\"btn btn-warning me-2\"\r\n                                            onClick={this.submitHandler}>Update\r\n                                    </button>\r\n                                </div>\r\n\r\n                                : null}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const queryParams = new URLSearchParams(window.location.search);\r\n        const id = queryParams.get(\"id\")\r\n\r\n        let {data} = await axios.get(\"https://ensolapi.herokuapp.com/order/\" + id, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + sessionStorage.getItem(\"token\")\r\n            },\r\n        });\r\n\r\n        let allMachines = data.data.machines.map((machine) => {\r\n            return {\r\n                mname: machine.machineType,\r\n                price: machine.rentPrice,\r\n                qty: machine.OrderMachines.quantity,\r\n                edate: machine.OrderMachines.contractEndDate.substring(0, 10),\r\n                sdate: machine.OrderMachines.contractStartDate.substring(0, 10),\r\n                image: JSON.parse(machine.images)\r\n            };\r\n        });\r\n\r\n        let ostatus = data.data.orderStatus;\r\n        if (ostatus == 0) {\r\n            ostatus = \"Cancelled\";\r\n        } else if (ostatus == 1) {\r\n            ostatus = \"Completed\";\r\n        } else if (ostatus == 2) {\r\n            ostatus = \"Accepted\";\r\n        } else if (ostatus == 3) {\r\n            ostatus = \"Pending\";\r\n        }\r\n\r\n        this.setState({\r\n            machines: allMachines,\r\n            oid: data.data.id,\r\n            total: data.data.price,\r\n            status: ostatus,\r\n            odate: data.data.orderDate.substring(0, 10),\r\n            username: data.data.user.name,\r\n            address: data.data.user.address,\r\n            tele: data.data.user.telephone\r\n        });\r\n        console.log(data);\r\n    }\r\n}\r\n\r\nexport default Orders;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../css/Login.css\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nclass Repairs extends Component {\r\n  state = {\r\n    rid: \"\",\r\n    description: \"\",\r\n    oid: \"\",\r\n    odate: \"\",\r\n    mtype: \"\",\r\n    status: \"\",\r\n    username: \"\",\r\n    address: \"\",\r\n    tele: \"\",\r\n    image: \"\",\r\n    sdate: \"\",\r\n    edate: \"\",\r\n    newstatus: 0\r\n  };\r\n\r\n  notify(msg)\r\n  {\r\n    toast.error(msg, {\r\n      position: \"top-right\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      });\r\n  }\r\n\r\n  onChangeHandler = (e) => {\r\n    const index = e.target.selectedIndex;\r\n    const el = e.target.childNodes[index]\r\n    const option =  el.getAttribute('id');  \r\n    this.state.newstatus = option;\r\n    console.log(\"Selected option \" + option);\r\n  }\r\n\r\n  submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    console.log('Repair Status: ', this.state.newstatus);\r\n    let status = {\r\n        status: this.state.newstatus\r\n    };\r\n    if (navigator.onLine) \r\n    {\r\n      try {\r\n\r\n        if(status === -1)\r\n        {\r\n          this.notify(\"Invalid repair status\");\r\n        }\r\n        else\r\n        {\r\n          if (status) \r\n          {\r\n            const { data } = await axios.put(\"https://ensolapi.herokuapp.com/repair/\" + this.state.rid, status, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + sessionStorage.getItem(\"token\")\r\n            },\r\n            });\r\n\r\n            console.log(data);\r\n            \r\n            if (data.status) \r\n            {\r\n              window.location.reload();\r\n            } \r\n            else \r\n            {\r\n              this.notify(data.data);\r\n            }\r\n          } \r\n          else \r\n          {\r\n            this.notify(\"Failed to get the repair status\");\r\n          }\r\n        }\r\n      } \r\n      catch (error) \r\n      {\r\n        this.notify(error.message + \" : \" + error.response.data);\r\n      }\r\n    } else \r\n    {\r\n      this.notify(\"Please check your internet connection\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n              <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                  <h4 class=\"card-title\">Repair Details</h4>\r\n                  <p class=\"card-description\">\r\n                    Repair Id : {this.state.rid}\r\n                  </p>\r\n                  <form class=\"forms-sample\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"exampleInputName1\">Description</label>\r\n                      <input type=\"text\" class=\"form-control\" placeholder=\"Description\" value={this.state.description}/>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                      <label for=\"exampleInputEmail3\">Order Id</label>\r\n                      <input type=\"text\" class=\"form-control\" placeholder=\"Order Id\" value={this.state.oid}/>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                      <label for=\"exampleInputEmail3\">Order Date</label>\r\n                      <input type=\"text\" class=\"form-control\" placeholder=\"Order date\" value={this.state.odate}/>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                      <label for=\"exampleInputEmail3\">Contract Start Date</label>\r\n                      <input type=\"text\" class=\"form-control\" placeholder=\"Order date\" value={this.state.sdate}/>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                      <label for=\"exampleInputEmail3\">Contract End Date</label>\r\n                      <input type=\"text\" class=\"form-control\" placeholder=\"Order date\" value={this.state.edate}/>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                      <label for=\"exampleInputEmail3\">Machine Type</label>\r\n                      <input type=\"text\" class=\"form-control\" placeholder=\"Order date\" value={this.state.mtype}/>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                      <label for=\"exampleInputEmail3\">Machine Image</label> <br/>\r\n                      <img style={{height:200, marginLeft:'50px'}} alt=\"machine image\" src={this.state.image}/>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                      <label for=\"exampleInputEmail3\">Repair Status</label>\r\n                      <input type=\"text\" class=\"form-control\" placeholder=\"Repair status\" value={this.state.status}/>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                      <label for=\"exampleInputPassword4\">Customer Name</label>\r\n                      <input type=\"text\" class=\"form-control\" id=\"exampleInputPassword4\" placeholder=\"Customer Name\" value={this.state.username}/>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                      <label for=\"exampleInputPassword4\">Customer address</label>\r\n                      <input type=\"text\" class=\"form-control\" id=\"exampleInputPassword4\" placeholder=\"Customer address\" value={this.state.address}/>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                      <label for=\"exampleInputPassword4\">Telephone number</label>\r\n                      <input type=\"text\" class=\"form-control\" id=\"exampleInputPassword4\" placeholder=\"Telephone number\" value={this.state.tele}/>\r\n                    </div>\r\n\r\n                    {this.state.status !== \"Cancelled\" ? \r\n                    <div>\r\n                    <div class=\"form-group\">\r\n                      <label for=\"exampleSelectGender\">Update Repair Status</label>\r\n                        <select class=\"form-control\" id=\"statusDropDown\" onChange={this.onChangeHandler}>\r\n                          <option id=\"0\">Cancel</option>\r\n                          <option id=\"1\">Complete</option>\r\n                          <option id=\"2\">Accept</option>\r\n                        </select>\r\n                      </div>\r\n                      <button type=\"submit\" class=\"btn btn-warning me-2\" onClick={this.submitHandler}>Update</button>\r\n                    </div>\r\n                    \r\n                      : null }\r\n\r\n                   \r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n    );\r\n  }\r\n\r\n  async componentDidMount()\r\n  {\r\n    const queryParams = new URLSearchParams(window.location.search);\r\n    const id = queryParams.get(\"id\")\r\n\r\n    let { data } = await axios.get(\"https://ensolapi.herokuapp.com/repair/\" + id, {\r\n      headers: {\r\n        \"Authorization\": \"Bearer \" + sessionStorage.getItem(\"token\")\r\n      },\r\n    });\r\n\r\n        let ostatus = data.data.status;\r\n        if(ostatus == 0)\r\n          {\r\n            ostatus = \"Cancelled\";\r\n          }\r\n          else if(ostatus == 1)\r\n          {\r\n            ostatus = \"Completed\";\r\n          }\r\n          else if(ostatus == 2)\r\n          {\r\n            ostatus = \"Ongoing\";\r\n          }\r\n          else if(ostatus == 3)\r\n          {\r\n            ostatus = \"Pending\";\r\n          }\r\n    \r\n          let mimage = JSON.parse(data.data.machine.images);\r\n\r\n          if(data.data.machine.contractStartDate != null)\r\n          {\r\n            this.setState({ sdate: data.data.machine.contractStartDate.substring(0,10) });\r\n          }\r\n\r\n          if(data.data.machine.contractEndDate != null)\r\n          {\r\n            this.setState({ edate: data.data.machine.contractEndDate.substring(0,10) });\r\n          }\r\n\r\n          if(data.data.order.orderDate != null)\r\n          {\r\n            this.setState({ odate: data.data.order.orderDate.substring(0,10) });\r\n          }\r\n\r\n        this.setState({ rid: data.data.id, description: data.data.description, image: mimage[0], mtype: data.data.machine.machineType, status: ostatus, oid: data.data.order.id, username: data.data.order.user.name, address: data.data.order.user.address, tele: data.data.order.user.telephone });\r\n        console.log(data);\r\n  }\r\n}\r\n\r\nexport default Repairs;","import React, {Component} from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport {Button, Nav, NavDropdown} from 'react-bootstrap';\r\nimport \"../vendors/ti-icons/css/themify-icons.css\";\r\nimport \"../vendors/base/vendor.bundle.base.css\";\r\nimport \"../css/style.css\";\r\nimport logo from \"../images/company_logo.png\";\r\n\r\n\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\n\r\nclass Repair extends Component {\r\n    state = {\r\n        repairs: [],\r\n        filteredRepairs: [],\r\n        startDate: new Date(),\r\n        endDate: new Date(),\r\n        filterText: \"Filter\",\r\n        filterResetText: \"Reset\"\r\n    };\r\n\r\n\r\n    handleRowClick = (id) => {\r\n        window.location.href = \"/repairs/search?id=\" + id;\r\n    }\r\n\r\n    setStartDate = (sdate) => {\r\n        this.setState({startDate: sdate})\r\n    }\r\n\r\n    setEndDate = (edate) => {\r\n        this.setState({endDate: edate})\r\n    }\r\n\r\n    logOut = async (e) => {\r\n        sessionStorage.clear();\r\n        window.location.href = \"/\";\r\n    }\r\n    \r\n    filterReset = async (e) => {\r\n        e.preventDefault();\r\n\r\n\r\n        this.setState({filteredRepairs: this.state.repairs})\r\n\r\n    }\r\n\r\n    filterHandler = async (e) => {\r\n        e.preventDefault();\r\n        this.state.filterOn2 = !this.state.filterOn2;\r\n\r\n\r\n            let repairFilter = {\r\n                endDate: this.state.endDate,\r\n                startDate: this.state.startDate\r\n            };\r\n            let {data} = await axios.post(\"https://ensolapi.herokuapp.com/admin/repair/filter\", repairFilter, {\r\n                headers: {\r\n                    \"Authorization\": \"Bearer \" + sessionStorage.getItem(\"token\")\r\n                },\r\n            });\r\n\r\n            let filteredList = data.data.repairs.map((repair) => {\r\n                if (repair.status == 0) {\r\n                    repair.status = \"Cancelled\";\r\n                    repair.color = \"#F44336\";\r\n                } else if (repair.status == 1) {\r\n                    repair.status = \"Completed\";\r\n                    repair.color = \"#4CAF50\";\r\n                } else if (repair.status == 2) {\r\n                    repair.status = \"Accepted\";\r\n                    repair.color = \"#3F51B5\";\r\n                } else if (repair.status == 3) {\r\n                    repair.status = \"Pending\";\r\n                    repair.color = \"#FF5722\";\r\n                }\r\n                return {\r\n                    id: repair.id,\r\n                    description: repair.description,\r\n                    username: repair.order.user.name,\r\n                    address: repair.order.user.address,\r\n                    telephone: repair.order.user.telephone,\r\n                    status: repair.status,\r\n                    color: repair.color\r\n                };\r\n            });\r\n\r\n            this.setState({filteredRepairs: filteredList})\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        function s() {\r\n\r\n        }\r\n\r\n        return (\r\n            <div class=\"container-scroller\">\r\n\r\n                <nav class=\"navbar col-lg-12 col-12 p-0 fixed-top d-flex flex-row\">\r\n\r\n                    <div class=\"text-center navbar-brand-wrapper d-flex align-items-center justify-content-center\">\r\n                        <img style={{width: 70, height: 70}} src={logo}/>\r\n                    </div>\r\n                    <div class=\"navbar-menu-wrapper d-flex align-items-center justify-content-end\">\r\n\r\n\r\n                        <ul class=\"navbar-nav navbar-nav-right\">\r\n                            <li class=\"nav-item nav-profile dropdown\">\r\n                                <a class=\"nav-link dropdown-toggle\" data-bs-toggle=\"dropdown\" id=\"profileDropdown\">\r\n                                    <Nav>\r\n                                        <NavDropdown title={sessionStorage.getItem(\"email\")}>\r\n\r\n\r\n                                            <NavDropdown.Item onClick={this.logOut}>Logout</NavDropdown.Item>\r\n\r\n\r\n                                        </NavDropdown>\r\n                                    </Nav>\r\n\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                        <button class=\"navbar-toggler navbar-toggler-right d-lg-none align-self-center\" type=\"button\"\r\n                                data-toggle=\"offcanvas\">\r\n                            <span class=\"ti-view-list\"/>\r\n                        </button>\r\n                    </div>\r\n                </nav>\r\n                <div class=\"container-fluid page-body-wrapper\">\r\n                    <nav class=\"sidebar sidebar-offcanvas\" id=\"sidebar\">\r\n                        <ul class=\"nav\">\r\n                            <li class=\"nav-item\">\r\n                                <a class=\"nav-link\" href=\"/dashboard\">\r\n                                    <i class=\"ti-shield menu-icon\"/>\r\n                                    <span class=\"menu-title\">Dashboard</span>\r\n                                </a>\r\n                            </li>\r\n                            <li class=\"nav-item\">\r\n                                <a class=\"nav-link\" data-bs-toggle=\"collapse\" href=\"/machine\" aria-expanded=\"false\"\r\n                                   aria-controls=\"ui-basic\">\r\n                                    <i class=\"ti-plug menu-icon\"/>\r\n                                    <span class=\"menu-title\">Machines</span>\r\n\r\n                                </a>\r\n\r\n                            </li>\r\n                            <li class=\"nav-item\">\r\n                                <Link class=\"nav-link\" to=\"/repairs\">\r\n                                    <i className=\"ti-settings menu-icon\"/>\r\n                                    <span class=\"menu-title\">Repairs</span>\r\n                                </Link>\r\n\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n                    <div class=\"main-panel\">\r\n                        <div class=\"content-wrapper\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-12 grid-margin\">\r\n                                    <div class=\"d-flex justify-content-between align-items-center\">\r\n                                        <div>\r\n                                            <h4 class=\"font-weight-bold mb-0\">Repairs</h4>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div style={{textAlign: 'right'}}>\r\n                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                    <KeyboardDatePicker\r\n                                        disableToolbar\r\n                                        variant=\"inline\"\r\n                                        format=\"MM/dd/yyyy\"\r\n                                        margin=\"normal\"\r\n                                        id=\"date-picker-inline\"\r\n                                        label=\"Start Date\"\r\n                                        value={this.state.startDate}\r\n                                        onChange={date => this.setStartDate(date)}\r\n                                        KeyboardButtonProps={{\r\n                                            'aria-label': 'change date',\r\n                                        }}\r\n                                    />\r\n                                </MuiPickersUtilsProvider>\r\n\r\n                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                    <KeyboardDatePicker\r\n                                        disableToolbar\r\n                                        variant=\"inline\"\r\n                                        format=\"MM/dd/yyyy\"\r\n                                        margin=\"normal\"\r\n                                        id=\"date-picker-inline2\"\r\n                                        label=\"End Date\"\r\n                                        value={this.state.endDate}\r\n                                        onChange={date => this.setEndDate(date)}\r\n                                        KeyboardButtonProps={{\r\n                                            'aria-label': 'change date',\r\n                                        }}\r\n                                    />\r\n                                </MuiPickersUtilsProvider>\r\n\r\n                                <button style={{marginTop: 15, color: 'white'}} type=\"submit\"\r\n                                        class=\"btn btn-warning me-2\"\r\n                                        onClick={this.filterHandler}>{this.state.filterText}</button>\r\n\r\n                                <button style={{marginTop: 15, color: 'white'}} type=\"submit\"\r\n                                        className=\"btn btn-danger\"\r\n                                        onClick={this.filterReset}>{this.state.filterResetText}</button>\r\n\r\n\r\n                            </div>\r\n\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-12 grid-margin stretch-card\">\r\n                                    <div class=\"card position-relative\">\r\n                                        <div class=\"card-body\">\r\n\r\n                                            <div class=\"table-responsive\">\r\n                                                <table class=\"table table-hover\">\r\n                                                    <thead>\r\n                                                    <tr>\r\n                                                        <th>Repair Id</th>\r\n                                                        <th>Description</th>\r\n                                                        <th>Customer</th>\r\n                                                        <th>Customer address</th>\r\n                                                        <th>Telephone</th>\r\n                                                        <th>Repair status</th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n\r\n                                                    {this.state.filteredRepairs ? this.state.filteredRepairs.map((repair) => (\r\n                                                        <tr key={repair.id}\r\n                                                            onClick={() => this.handleRowClick(repair.id)}>\r\n                                                            <td>{repair.id}</td>\r\n                                                            <td>{repair.description.substring(0, 20)}</td>\r\n                                                            <td>{repair.username}</td>\r\n                                                            <td>{repair.address}</td>\r\n                                                            <td>{repair.telephone}</td>\r\n                                                            <td><Button style={{\r\n                                                                backgroundColor: repair.color,\r\n                                                                borderColor: repair.color,\r\n                                                                color: 'white',\r\n                                                                width: '125px'\r\n                                                            }}>{repair.status}</Button></td>\r\n                                                        </tr>\r\n                                                    )) : null}\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <footer class=\"footer\">\r\n                            <div class=\"d-sm-flex justify-content-center justify-content-sm-between\">\r\n                                <span class=\"text-muted text-center text-sm-left d-block d-sm-inline-block\">Copyright © RWP 2022</span>\r\n                            </div>\r\n                        </footer>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        let {data} = await axios.get(\"https://ensolapi.herokuapp.com/admin/dashboardValues\", {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + sessionStorage.getItem(\"token\")\r\n            },\r\n        });\r\n\r\n        let allOrders = data.data.orders.map((order) => {\r\n            if (order.orderStatus == 0) {\r\n                order.orderStatus = \"Cancelled\";\r\n                order.color = \"#F44336\";\r\n            } else if (order.orderStatus == 1) {\r\n                order.orderStatus = \"Completed\";\r\n                order.color = \"#4CAF50\";\r\n            } else if (order.orderStatus == 2) {\r\n                order.orderStatus = \"Accepted\";\r\n                order.color = \"#3F51B5\";\r\n            } else if (order.orderStatus == 3) {\r\n                order.orderStatus = \"Pending\";\r\n                order.color = \"#FF5722\";\r\n            }\r\n            return {\r\n                id: order.id,\r\n                username: order.user.name,\r\n                address: order.user.address,\r\n                telephone: order.user.telephone,\r\n                price: order.price,\r\n                status: order.orderStatus,\r\n                color: order.color\r\n            };\r\n        });\r\n\r\n        let allRepairs = data.data.repairs.map((repair) => {\r\n            if (repair.status == 0) {\r\n                repair.status = \"Cancelled\";\r\n                repair.color = \"#F44336\";\r\n            } else if (repair.status == 1) {\r\n                repair.status = \"Completed\";\r\n                repair.color = \"#4CAF50\";\r\n            } else if (repair.status == 2) {\r\n                repair.status = \"Accepted\";\r\n                repair.color = \"#3F51B5\";\r\n            } else if (repair.status == 3) {\r\n                repair.status = \"Pending\";\r\n                repair.color = \"#FF5722\";\r\n            }\r\n            return {\r\n                id: repair.id,\r\n                description: repair.description,\r\n                username: repair.order.user.name,\r\n                address: repair.order.user.address,\r\n                telephone: repair.order.user.telephone,\r\n                status: repair.status,\r\n                color: repair.color\r\n            };\r\n        });\r\n\r\n        this.setState({\r\n            orders: allOrders,\r\n            filteredOrders: allOrders,\r\n            repairs: allRepairs,\r\n            filteredRepairs: allRepairs,\r\n            repair_count: data.data.top_values.repair_count,\r\n            total_machines: data.data.top_values.total_machines,\r\n            rented_machines: data.data.top_values.rented_machines,\r\n            user_count: data.data.top_values.user_count\r\n        });\r\n    }\r\n}\r\n\r\nwindow.addEventListener(\"pageshow\", function (event) {\r\n    var historyTraversal = event.persisted || (typeof window.performance != \"undefined\" && window.performance.navigation.type === 2);\r\n    if (historyTraversal) {\r\n        window.location.reload();\r\n    }\r\n});\r\n\r\nexport default Repair;","import axios from \"axios\";\r\nimport React, {Component, useState} from \"react\";\r\nimport {Container, Form, Nav, NavDropdown} from \"react-bootstrap\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport logo from \"../images/company_logo.png\";\r\nimport {Link} from \"react-router-dom\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {ToastContainer, toast} from 'react-toastify';\r\n\r\n\r\nconst AddMachineData = () => {\r\n    const [serialnumber, setserialNumber] = useState(\"\");\r\n    const [machinename, setmachineName] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [rentprice, setrentPrice] = useState(0);\r\n    const [availablequantity, setavailableQuantity] = useState(0);\r\n    const [image, setImage] = useState({});\r\n    const [deleteid, setDeleteid] = useState(0);\r\n\r\n    const data = {\r\n        serialNumber: serialnumber,\r\n        machineType: machinename,\r\n        description: description,\r\n        rentPrice: rentprice,\r\n        availableQty: availablequantity,\r\n        machinePhotos: image,\r\n    };\r\n    const notify = (msg) => {\r\n        toast.error(msg, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n        });\r\n    }\r\n\r\n    const Insert = async () => {\r\n\r\n        const token = sessionStorage.getItem(\"token\");\r\n        if (!serialnumber) {\r\n            notify(\"Please enter serial number\");\r\n        } else if (!machinename) {\r\n            notify(\"Please enter machine name\");\r\n        } else if (!description) {\r\n            notify(\"Please enter description\");\r\n        } else if (!rentprice) {\r\n            notify(\"Please enter rent price\");\r\n        } else if (!availablequantity) {\r\n            notify(\"Please enter available quantity\");\r\n        } else if (!image) {\r\n            notify(\"Please select image\");\r\n        } else {\r\n\r\n            await axios\r\n                .post(\"https://ensolapi.herokuapp.com/machine\", data, {\r\n                    headers: {\r\n                        \"Content-Type\": \"multipart/form-data\", Authorization: `Bearer ${token}`,\r\n                    },\r\n                })\r\n                .then((response) => {\r\n\r\n                    if (response.data.status) {\r\n                        successNotify(response.data.data);\r\n                        window.location.reload();\r\n                    }\r\n                });\r\n        }\r\n    };\r\n\r\n    const successNotify = (msg) => {\r\n        console.log(msg);\r\n        toast.success(msg, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n        });\r\n    }\r\n\r\n\r\n    const imageCome = (img) => {\r\n        setImage(img);\r\n    };\r\n\r\n    const pageRefresh = () => {\r\n        window.location.reload();\r\n    };\r\n\r\n    async function logOut() {\r\n        sessionStorage.clear();\r\n        window.location.href = \"/\";\r\n    }\r\n\r\n    return (<div className=\"container-scroller\">\r\n        <div>\r\n            <ToastContainer/>\r\n        </div>\r\n        <nav className=\"navbar col-lg-12 col-12 p-0 fixed-top d-flex flex-row\">\r\n\r\n            <div className=\"text-center navbar-brand-wrapper d-flex align-items-center justify-content-center\">\r\n                <img style={{width: 70, height: 70}} src={logo}/>\r\n            </div>\r\n\r\n            <div className=\"navbar-menu-wrapper d-flex align-items-center justify-content-end\">\r\n\r\n\r\n                <ul className=\"navbar-nav navbar-nav-right\">\r\n                    <li className=\"nav-item nav-profile dropdown\">\r\n                        <a className=\"nav-link dropdown-toggle\" data-bs-toggle=\"dropdown\" id=\"profileDropdown\">\r\n                            <Nav>\r\n                                <NavDropdown title={sessionStorage.getItem(\"email\")}>\r\n\r\n\r\n                                    <NavDropdown.Item onClick={logOut}>Logout</NavDropdown.Item>\r\n\r\n\r\n                                </NavDropdown>\r\n                            </Nav>\r\n\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n                <button className=\"navbar-toggler navbar-toggler-right d-lg-none align-self-center\" type=\"button\"\r\n                        data-toggle=\"offcanvas\">\r\n                    <span className=\"ti-view-list\"/>\r\n                </button>\r\n            </div>\r\n\r\n        </nav>\r\n        <div className=\"container-fluid page-body-wrapper\">\r\n            <nav className=\"sidebar sidebar-offcanvas\" id=\"sidebar\">\r\n                <ul className=\"nav\">\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"/dashboard\">\r\n                            <i className=\"ti-shield menu-icon\"/>\r\n                            <span className=\"menu-title\">Dashboard</span>\r\n                        </a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" data-bs-toggle=\"collapse\" href=\"/machine\" aria-expanded=\"false\"\r\n                           aria-controls=\"ui-basic\">\r\n                            <i className=\"ti-plug menu-icon\"/>\r\n                            <span className=\"menu-title\">Machines</span>\r\n\r\n                        </a>\r\n\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/repairs\">\r\n                            <i className=\"ti-settings menu-icon\"/>\r\n                            <span className=\"menu-title\">Repairs</span>\r\n                        </Link>\r\n\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n            <div className=\"main-panel\">\r\n                <div className=\"content-wrapper\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12 grid-margin\">\r\n                            <div className=\"d-flex justify-content-between align-items-center\">\r\n                                <div>\r\n                                    <h4 className=\"font-weight-bold mb-0\">Machines</h4>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Form>\r\n\r\n\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Serial Number</Form.Label>\r\n                            <Form.Control\r\n                                required\r\n                                type=\"text\"\r\n                                placeholder=\"Enter Serial No\"\r\n                                onChange={(event) => {\r\n                                    setserialNumber(event.target.value);\r\n                                }}\r\n                            />\r\n\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Machine Name</Form.Label>\r\n                            <Form.Control\r\n                                required\r\n                                type=\"text\"\r\n                                placeholder=\"Enter Machine Name\"\r\n                                onChange={(event) => {\r\n                                    setmachineName(event.target.value);\r\n                                }}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n                            <Form.Label>Description</Form.Label>\r\n                            <Form.Control\r\n                                required\r\n                                as=\"textarea\"\r\n                                placeholder=\"Enter Your Description\"\r\n                                rows={3}\r\n                                onChange={(event) => {\r\n                                    setDescription(event.target.value);\r\n                                }}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Rent Price</Form.Label>\r\n                            <Form.Control\r\n                                required\r\n                                type=\"number\"\r\n                                min=\"0\"\r\n                                placeholder=\"Enter Rent Price\"\r\n                                onChange={(event) => {\r\n                                    setrentPrice(event.target.value);\r\n                                }}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Available Quantity</Form.Label>\r\n                            <Form.Control\r\n                                required\r\n                                type=\"number\"\r\n                                min=\"1\"\r\n                                placeholder=\"Enter Available Quantity\"\r\n                                onChange={(event) => {\r\n                                    setavailableQuantity(event.target.value);\r\n                                }}\r\n                            />\r\n                        </Form.Group>\r\n                        {/* https://react-bootstrap.github.io/forms/form-control/ */}\r\n                        <Form.Group controlId=\"formFileMultiple\" className=\"mb-3\">\r\n                            <Form.Label>Upload Image</Form.Label>\r\n\r\n                            <Form.Control\r\n                                type=\"file\"\r\n                                multiple\r\n                                onChange={(event) => {\r\n                                    imageCome(event.target.files[0]);\r\n                                }}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"my-3\">\r\n                            <Button\r\n                                onClick={Insert}\r\n                                style={{color: \"white\"}}\r\n                                className=\"mr-5\"\r\n                                variant=\"primary\"\r\n                            >\r\n                                Insert\r\n                            </Button>{\" \"}\r\n\r\n                            <Button\r\n                                style={{color: \"white\"}}\r\n                                className=\"mr-5\"\r\n                                variant=\"primary\"\r\n                                onClick={pageRefresh}\r\n                            >\r\n                                Clear\r\n                            </Button>{\" \"}\r\n                        </Form.Group>\r\n                    </Form>\r\n                    <footer className=\"footer\">\r\n                        <div className=\"d-sm-flex justify-content-center justify-content-sm-between\">\r\n                            <span className=\"text-muted text-center text-sm-left d-block d-sm-inline-block\">Copyright © RWP 2022</span>\r\n                        </div>\r\n                    </footer>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>);\r\n};\r\n\r\nexport default AddMachineData;","import axios from \"axios\";\r\nimport React, {Component, useEffect, useState} from \"react\";\r\nimport {Container, Form, Nav, NavDropdown} from \"react-bootstrap\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport {toast, ToastContainer} from \"react-toastify\";\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\nconst EditMachineData = () => {\r\n\r\n    const MySwal = withReactContent(Swal)\r\n    const [serialnumber, setserialNumber] = useState(\"\");\r\n    const [machinename, setmachineName] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [rentprice, setrentPrice] = useState(0);\r\n    const [availablequantity, setavailableQuantity] = useState(0);\r\n    const [imagePath, setImagePath] = useState({});\r\n    const [image, setImage] = useState({});\r\n    const [deleteid, setDeleteid] = useState(0);\r\n\r\n    useEffect(async () => {\r\n        const queryParams = new URLSearchParams(window.location.search);\r\n        const id = queryParams.get(\"id\")\r\n\r\n        let {data} = await axios.get(\"https://ensolapi.herokuapp.com/machine/\" + id, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + sessionStorage.getItem(\"token\")\r\n            },\r\n        });\r\n\r\n        setserialNumber(data.data.serialNumber);\r\n        setDeleteid(data.data.id);\r\n        setrentPrice(data.data.rentPrice);\r\n        setDescription(data.data.description);\r\n        setmachineName(data.data.machineType);\r\n        setavailableQuantity(data.data.availableQty)\r\n        setImagePath(JSON.parse(data.data.images)[0])\r\n\r\n    }, [])\r\n\r\n\r\n    const data = {\r\n        serialNumber: serialnumber,\r\n        machineType: machinename,\r\n        description: description,\r\n        rentPrice: rentprice,\r\n        availableQty: availablequantity,\r\n        machinePhotos: image,\r\n    };\r\n\r\n    const deleteMachine = () => {\r\n        MySwal.fire({\r\n            title: 'Are you sure?',\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'warning',\r\n\r\n            confirmButtonColor: '#d33',\r\n            cancelButtonColor: '#3085d6',\r\n            confirmButtonText: 'Yes, delete it!',\r\n            showCancelButton: true,\r\n            reverseButtons: true\r\n\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                const token = sessionStorage.getItem(\"token\");\r\n\r\n                axios\r\n                    .delete(`https://ensolapi.herokuapp.com/machine/${deleteid}`, {\r\n                        headers: {\r\n                            \"Content-Type\": \"multipart/form-data\", Authorization: `Bearer ${token}`,\r\n                        },\r\n                    })\r\n                    .then((response) => {\r\n                        if (response.data.status) {\r\n                            successNotify(response.data.data);\r\n                            window.location.href = \"/machine\";\r\n                        }\r\n\r\n                    });\r\n            }\r\n\r\n\r\n        })\r\n\r\n    };\r\n\r\n    const updateMachine = () => {\r\n        MySwal.fire({\r\n            title: 'Are you sure?',\r\n            text: \"You want to update this?\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#d33',\r\n            cancelButtonColor: '#3085d6',\r\n            confirmButtonText: 'Yes, update it!',\r\n            reverseButtons: true\r\n\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                const datas = {};\r\n                if (serialnumber) {\r\n                    datas.serialNumber = serialnumber;\r\n                }\r\n                if (machinename) {\r\n                    datas.machineType = machinename;\r\n                }\r\n                if (description) {\r\n                    datas.description = description;\r\n                }\r\n                if (rentprice) {\r\n                    datas.rentPrice = rentprice;\r\n                }\r\n                if (availablequantity) {\r\n                    datas.availableQty = availablequantity;\r\n                }\r\n                if (image) {\r\n                    datas.machinePhotos = image;\r\n                }\r\n\r\n                const token = sessionStorage.getItem(\"token\");\r\n\r\n                axios\r\n                    .put(`https://ensolapi.herokuapp.com/machine/${deleteid}`, datas, {\r\n                        headers: {\r\n                            \"Content-Type\": \"multipart/form-data\", Authorization: `Bearer ${token}`,\r\n                        },\r\n                    })\r\n                    .then((response) => {\r\n\r\n                        if (response.data.status)\r\n                            successNotify(response.data.data);\r\n\r\n                    });\r\n            }\r\n\r\n\r\n        })\r\n\r\n    };\r\n\r\n    const imageCome = (img) => {\r\n\r\n        setImagePath(URL.createObjectURL(img));\r\n        setImage(img);\r\n    };\r\n    const errNotify = (msg) => {\r\n        console.log(msg);\r\n        toast.error(msg, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n        });\r\n    }\r\n    const successNotify = (msg) => {\r\n        console.log(msg);\r\n        toast.success(msg, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n        });\r\n    }\r\n\r\n    const pageRefresh = () => {\r\n        window.location.reload();\r\n    };\r\n\r\n    async function logOut() {\r\n        sessionStorage.clear();\r\n        window.location.href = \"/\";\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <ToastContainer/>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12 grid-margin\">\r\n                            <div className=\"d-flex justify-content-between align-items-center\">\r\n                                <div>\r\n                                    <h4 className=\"font-weight-bold mb-0\">Manage Machine</h4>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"exampleInputName1\">Id</label>\r\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Machine Id\"\r\n                                       value={deleteid}/>\r\n                            </div>\r\n                            {/*<Form.Label>id</Form.Label>*/}\r\n                            {/*<Form.Control*/}\r\n                            {/*    type=\"text\"*/}\r\n                            {/*    placeholder=\"id\"*/}\r\n\r\n                            {/*    onChange={(event) => {*/}\r\n                            {/*        setDeleteid(event.target.value);*/}\r\n                            {/*    }}*/}\r\n                            {/*/>*/}\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Serial Number</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Enter Serial No\"\r\n                                value={serialnumber}\r\n                                onChange={(event) => {\r\n                                    setserialNumber(event.target.value);\r\n                                }}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Machine Name</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Enter Machine Name\"\r\n                                value={machinename}\r\n                                onChange={(event) => {\r\n                                    setmachineName(event.target.value);\r\n                                }}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n                            <Form.Label>Description</Form.Label>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                placeholder=\"Enter Your Description\"\r\n                                rows={3}\r\n                                value={description}\r\n                                onChange={(event) => {\r\n                                    setDescription(event.target.value);\r\n                                }}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Rent Price</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Enter Rent Price\"\r\n                                value={rentprice}\r\n                                onChange={(event) => {\r\n                                    setrentPrice(event.target.value);\r\n                                }}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Available Quantity</Form.Label>\r\n                            <Form.Control\r\n                                type=\"email\"\r\n                                placeholder=\"Enter Available Quantity\"\r\n                                value={availablequantity}\r\n                                onChange={(event) => {\r\n                                    setavailableQuantity(event.target.value);\r\n                                }}\r\n                            />\r\n                        </Form.Group>\r\n                        {/* https://react-bootstrap.github.io/forms/form-control/ */}\r\n                        <Form.Group controlId=\"formFileMultiple\" className=\"mb-3\">\r\n                            <Form.Label>Machine Image</Form.Label>\r\n                            <br/>\r\n                            <img style={{height: 300, width: 300}}\r\n                                 alt=\"machine image\" src={imagePath}/>\r\n                            <Form.Control\r\n                                type=\"file\"\r\n                                multiple\r\n                                onChange={(event) => {\r\n                                    imageCome(event.target.files[0]);\r\n                                }}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"my-3\">\r\n\r\n                            <Button\r\n                                onClick={updateMachine}\r\n                                style={{color: \"white\"}}\r\n                                className=\"mr-5\"\r\n                                variant=\"primary\"\r\n                            >\r\n                                Update\r\n                            </Button>{\" \"}\r\n                            <Button\r\n                                style={{color: \"white\"}}\r\n                                className=\"mr-5\"\r\n                                variant=\"primary\"\r\n                                onClick={deleteMachine}\r\n                            >\r\n                                Delete\r\n                            </Button>{\" \"}\r\n\r\n                        </Form.Group>\r\n                    </Form>\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n        ;\r\n\r\n};\r\n\r\n\r\nexport default EditMachineData;","import React, {Component} from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport {Button, Nav, NavDropdown} from 'react-bootstrap';\r\nimport \"../vendors/ti-icons/css/themify-icons.css\";\r\nimport \"../vendors/base/vendor.bundle.base.css\";\r\nimport \"../css/style.css\";\r\nimport logo from \"../images/company_logo.png\";\r\n\r\n\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\n\r\nclass MachineDashboard extends Component {\r\n    state = {\r\n        machines: [],\r\n        filteredMachines: [],\r\n        startDate: new Date(),\r\n        endDate: new Date(),\r\n\r\n        filterOn: false,\r\n\r\n        addText: \"Add a Machine\",\r\n    };\r\n\r\n\r\n    handleRowClick = (id) => {\r\n        window.location.href = \"/machine/search?id=\" + id;\r\n    }\r\n\r\n    setStartDate = (sdate) => {\r\n        this.setState({startDate: sdate})\r\n    }\r\n\r\n    setEndDate = (edate) => {\r\n        this.setState({endDate: edate})\r\n    }\r\n\r\n    setStartDate2 = (sdate) => {\r\n        this.setState({startDate2: sdate})\r\n    }\r\n    handleDateChange = (date) => {\r\n        this.state.startDate = date;\r\n    }\r\n\r\n    logOut = async (e) => {\r\n        sessionStorage.clear();\r\n        window.location.href = \"/\";\r\n    }\r\n    filterReset = async (e) => {\r\n        e.preventDefault();\r\n        this.state.filterOn = false;\r\n\r\n\r\n        this.setState({filteredOrders: this.state.machines})\r\n\r\n    }\r\n\r\n    machineAddHandler = async (e) => {\r\n        e.preventDefault();\r\n\r\n        window.location.href = \"/machine/add\";\r\n\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        function s() {\r\n\r\n        }\r\n\r\n        return (\r\n            <div class=\"container-scroller\">\r\n\r\n                <nav class=\"navbar col-lg-12 col-12 p-0 fixed-top d-flex flex-row\">\r\n\r\n                    <div class=\"text-center navbar-brand-wrapper d-flex align-items-center justify-content-center\">\r\n                        <img style={{width: 70, height: 70}} src={logo}/>\r\n                    </div>\r\n                    <div class=\"navbar-menu-wrapper d-flex align-items-center justify-content-end\">\r\n\r\n\r\n                        <ul class=\"navbar-nav navbar-nav-right\">\r\n                            <li class=\"nav-item nav-profile dropdown\">\r\n                                <a class=\"nav-link dropdown-toggle\" data-bs-toggle=\"dropdown\" id=\"profileDropdown\">\r\n                                    <Nav>\r\n                                        <NavDropdown title={sessionStorage.getItem(\"email\")}>\r\n\r\n\r\n                                            <NavDropdown.Item onClick={this.logOut}>Logout</NavDropdown.Item>\r\n\r\n\r\n                                        </NavDropdown>\r\n                                    </Nav>\r\n\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                        <button class=\"navbar-toggler navbar-toggler-right d-lg-none align-self-center\" type=\"button\"\r\n                                data-toggle=\"offcanvas\">\r\n                            <span class=\"ti-view-list\"/>\r\n                        </button>\r\n                    </div>\r\n                </nav>\r\n                <div class=\"container-fluid page-body-wrapper\">\r\n                    <nav class=\"sidebar sidebar-offcanvas\" id=\"sidebar\">\r\n                        <ul class=\"nav\">\r\n                            <li class=\"nav-item\">\r\n                                <a class=\"nav-link\" href=\"/dashboard\">\r\n                                    <i class=\"ti-shield menu-icon\"/>\r\n                                    <span class=\"menu-title\">Dashboard</span>\r\n                                </a>\r\n                            </li>\r\n                            <li class=\"nav-item\">\r\n                                <a class=\"nav-link\" data-bs-toggle=\"collapse\" href=\"/machine\" aria-expanded=\"false\"\r\n                                   aria-controls=\"ui-basic\">\r\n                                    <i class=\"ti-plug menu-icon\"/>\r\n                                    <span class=\"menu-title\">Machines</span>\r\n\r\n                                </a>\r\n\r\n                            </li>\r\n                            <li class=\"nav-item\">\r\n                                <Link class=\"nav-link\" to=\"/repairs\">\r\n                                    <i className=\"ti-settings menu-icon\"/>\r\n                                    <span class=\"menu-title\">Repairs</span>\r\n                                </Link>\r\n\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n                    <div class=\"main-panel\">\r\n                        <div class=\"content-wrapper\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-12 grid-margin\">\r\n                                    <div class=\"d-flex justify-content-between align-items-center\">\r\n                                        <div>\r\n                                            <h4 class=\"font-weight-bold mb-0\">Machines</h4>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div style={{textAlign: 'right'}}>\r\n\r\n\r\n                                <button style={{marginTop: 15, color: 'white',marginBottom:15}} type=\"submit\"\r\n                                        class=\"btn btn-warning me-2\"\r\n                                        onClick={this.machineAddHandler}>{this.state.addText}</button>\r\n\r\n                            </div>\r\n\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-12 grid-margin stretch-card\">\r\n                                    <div class=\"card position-relative\">\r\n                                        <div class=\"card-body\">\r\n\r\n                                            <div class=\"table-responsive\">\r\n                                                <table class=\"table table-hover\">\r\n                                                    <thead>\r\n                                                    <tr>\r\n                                                        <th>Machine Id</th>\r\n                                                        <th>Machine Type</th>\r\n                                                        <th>Description</th>\r\n                                                        <th>Rent Price(LKR)</th>\r\n                                                        <th>Available Quantity</th>\r\n                                                        <th>Image</th>\r\n                                                    </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n\r\n                                                    {this.state.filteredMachines ? this.state.filteredMachines.map((machine) => (\r\n                                                        <tr key={machine.id}\r\n                                                            onClick={() => this.handleRowClick(machine.id)}>\r\n                                                            <td>{machine.id}</td>\r\n                                                            <td>{machine.machineType}</td>\r\n                                                            <td>{machine.description.substring(0, 20)}</td>\r\n                                                            <td>{machine.rentPrice}</td>\r\n                                                            <td>{machine.availableQuantity}</td>\r\n                                                            <td>\r\n                                                                <img style={{height: 100, width: 100}}\r\n                                                                     alt=\"machine image\" src={machine.image}/>\r\n\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    )) : null}\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <footer class=\"footer\">\r\n                            <div class=\"d-sm-flex justify-content-center justify-content-sm-between\">\r\n                                <span class=\"text-muted text-center text-sm-left d-block d-sm-inline-block\">Copyright © RWP 2022</span>\r\n                            </div>\r\n                        </footer>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        let {data} = await axios.get(\"https://ensolapi.herokuapp.com/machine\", {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + sessionStorage.getItem(\"token\")\r\n            },\r\n        });\r\n\r\n        let machines = data.data.map((machine) => {\r\n\r\n            return {\r\n                id: machine.id,\r\n                machineType: machine.machineType,\r\n                description: machine.description,\r\n                rentPrice: machine.rentPrice,\r\n                availableQuantity: machine.availableQty,\r\n                image: JSON.parse(machine.images)[0]\r\n            };\r\n        });\r\n\r\n\r\n        this.setState({\r\n            machines: machines,\r\n            filteredMachines: machines\r\n        });\r\n    }\r\n}\r\n\r\nwindow.addEventListener(\"pageshow\", function (event) {\r\n    const historyTraversal = event.persisted || (typeof window.performance != \"undefined\" && window.performance.navigation.type === 2);\r\n    if (historyTraversal) {\r\n        window.location.reload();\r\n    }\r\n});\r\n\r\nexport default MachineDashboard;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter, Routes, Route, Link, Router, Switch} from \"react-router-dom\";\r\nimport reportWebVitals from './reportWebVitals';\r\nimport App from \"./App\"\r\nimport Login from './components/login';\r\nimport Dashboard from './components/dashboard';\r\nimport Orders from './components/orders';\r\nimport Repairs from './components/repairs';\r\nimport Repair from \"./components/repairs_dashboard\";\r\nimport AddMachineData from \"./components/AddMachineData\";\r\nimport EditMachineData from \"./components/EditMachineData\";\r\nimport MachineDashboard from \"./components/machine_dashboard\";\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <React.Fragment>\r\n\r\n\r\n            <Routes>\r\n\r\n                <Route exact path=\"/\" element={<Login/>}/>\r\n\r\n\r\n\r\n                <Route exact path=\"/dashboard\" element={<Dashboard/>}/>\r\n                <Route exact path=\"/machine/:id\" element={<EditMachineData/>}/>\r\n                <Route exact path=\"/machine/add\" element={<AddMachineData/>}/>\r\n                <Route exact path=\"/machine\" element={<MachineDashboard/>}/>\r\n                <Route exact path=\"/repairs\" element={<Repair/>}/>\r\n\r\n                <Route path=\"/orders/:id\" element={<Orders/>}/>\r\n\r\n                <Route path=\"/repairs/:id\" element={<Repairs/>}/>\r\n\r\n            </Routes>\r\n        </React.Fragment>\r\n    </BrowserRouter>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}